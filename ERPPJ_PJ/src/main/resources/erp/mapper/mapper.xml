<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace = "com.pj.erp.persistence.ERPDAO">
	<select id="loginCheck" resultType = "java.util.Map" parameterType = "String">
		select *
		from userauth
		where username = #{username}
	</select>
	
	<select id="authCheck" resultType = "java.util.Map" parameterType = "String">
		SELECT username, authority
		FROM authority
		WHERE username = #{username}	
	</select>
	
	<!-- nfc 등록 -->
	<insert id="nfc" parameterType="String">
		insert into nfc_log_tbl(nfc_code, tag_code)
		values(#{nfcid}, lpad(NFC_CODE_SEQ.nextval,8,'NFC_'))
	</insert>
	
	<!-- NFC로 출퇴근 사람 username가져오기 -->
	<select id="selectNfc" parameterType="String" resultType="com.pj.erp.vo.HR.HR_nfc_log">
		Select nfc_code, Min(tag_date) as min, Max(tag_date) as max, e_name, username 
		From nfc_daylog_view
        Where nfc_code = #{nfc_code}
        And tag_date like to_char(sysdate, 'yyyymmdd%')
		Group by e_name, username, nfc_code
	</select>
	
	<!-- 블록체인을 위한 department_group_Code select -->
	<select id="getGroupCode" parameterType="String" resultType="com.pj.erp.vo.BlockChainVO">
		Select e.ether_code as ether_code, e.department_code as department_code  
		    , e.wallet_code as wallet_code, d.department_name as department_name
		From ether_tbl e Join department_tbl d
		On e.department_code = d.department_code
		Where e.department_code = #{department_code} 
	</select>
	
	<!-- 구매할 때 필요한 목록 -->
	<select id="getMaterialList" resultType="com.pj.erp.vo.MaterialVO">
		select * from material_tbl
		Order by material_code asc
	</select>
	
	<!-- 물품판매목록 getProductList -->
	<select id="getProductList" resultType="com.pj.erp.vo.ProductVO">
		select * from product_list_tbl
	</select>
	
	<!-- 가상화폐 예산편성 내역 insert -->
	<insert id="insertLog" parameterType="com.pj.erp.vo.HashVO">
		Insert Into ether_rec_tbl(department_code, e_subject, e_hashcode)
		Values (#{department_code}, #{e_subject}, #{e_hashcode})
	</insert>
	
	<!-- 가상화폐 예산편성 내역 select -->
	<select id="selectHashDept" parameterType="String" resultType="com.pj.erp.vo.HashVO">
		Select e.ether_rec_code as ether_rec_code,
	        e.department_code as department_code,
	        e.e_subject as e_subject,
	        e.e_hashcode as e_hashcode,
	        d.department_name as department_name
	    From ether_rec_tbl e Join department_tbl d
	    On e.department_code = d.department_code
	    Where d.department_name like '%'|| #{department_name} ||'%'	
	</select>
	
	<!-- 판매 물품 상세페이지 -->
	<select id="gerProductDetail" resultType="com.pj.erp.vo.ProductVO" parameterType="String">
		select * from product_list_tbl where product_code = #{product_code}	
	</select>
	
	<!-- 가상화폐를 통해 구매한 자재 DB Insert -->
	<insert id="InsertMaterial_IO" parameterType="com.pj.erp.vo.Material_VO">
		Insert Into material_io_rec(m_io_code, material_code, m_io_regdate, m_price, m_amount, m_note)
		values(lpad(M_IO_CODE_SEQ.nextval, 4,'IO_'), #{material_code}, sysdate, #{m_price}, #{m_amount}, #{m_note})
	</insert>
	
	<select id="selectMateral" resultType="com.pj.erp.vo.Material_VO">
		Select i.m_io_code as m_io_code,
	        i.material_code as material_code,
	        i.m_io_regdate as m_io_regdate,
	        i.m_price as m_price,
	        i.m_amount as m_amount,
	        i.m_type as m_type,
	        i.m_note as m_note,
	        i.m_note as m_note,
	        m.material_name as material_name,
	        m.material_unit as material_unit
	    From material_io_rec i Join material_tbl m
	    On i.material_code = m.material_code
	</select>
	
	<select id="getContrast" resultType="com.pj.erp.vo.SalelistVO">
 		   select nvl(TO_CHAR(reg_date,'mm'),'total')month, sum(amount*price)price, sum(amount)amount from salelist_tbl where TO_CHAR(reg_date,'yyyy') = TO_CHAR(sysdate,'yyyy') group by rollup(TO_CHAR(reg_date,'mm'))
 	</select>
 	<select id="getContrast2" resultType="com.pj.erp.vo.SalelistVO">
 		   select nvl(TO_CHAR(release_date,'mm'),'total')month, sum(release_count*unit_cost)aprice, sum(release_count)aamount from sar_list_tbl where TO_CHAR(release_date,'yyyy') = TO_CHAR(sysdate,'yyyy') group by rollup(TO_CHAR(release_date,'mm')) 
 	</select>

	<!-- 가상화폐를 통해 판매 물품 판매대장 insert -->
	<insert id="insertSalelist" parameterType="com.pj.erp.vo.ST.SalePlan">
		Insert into salelist_tbl(salelist_code, username, detail_ac_code, customer_code, reg_date, release_o_date, unit, amount, 
								price, note, release_state, ether_salecode)
		Values('sa_' || salelist_seq.nextval, '10008', #{detail_ac_code}, '0x1d9CefB3A08ac0390e436A02807B5d4054DE6247', sysdate, #{release_o_date}, '대', '1', 
				#{price}, '가상화폐로 구매', '2', #{ether_salecode})
	</insert>
	
	<!-- 사내메신저 사원 검색 목록 가져오기 -->
	<select id="selectUserMsg" resultType="com.pj.erp.vo.MsgVO">
		Select u.username  as username 
	        , u.e_name as e_name
	        , d.department_code as department_code
	        , d.department_name as department_name
	        , u.rank_code as rank_code
	    From users u Join department_tbl d
	    On u.department_code = d.department_code
	    Where u.e_name Like '%' || #{e_name} || '%'
	    ANd d.department_name Like '%' || #{department_name} || '%'
	    Order by u.username asc
	</select>
	
	<!-- 사내메세지 입력을 위한 수신자 검색 -->
	<select id="WriteForm" parameterType="String" resultType="com.pj.erp.vo.MsgVO">
		Select u.username as username, u.e_name as e_name, d.department_name as department_name
			From users u, department_tbl d
			Where username = #{username}
            And u.department_code = d.department_code
	</select>
	
	<!-- 사내메세지 DB 입력 -->
	<insert id="WritePro" parameterType="com.pj.erp.vo.MsgVO">
		Insert Into e_message_tbl(e_msg_code, from_user, to_user, msg_content)
		Values('MSG_'||MSG_CODE_SEQ.nextval, #{from_user}, #{to_user}, #{msg_content})
	</insert>
	
	
</mapper>